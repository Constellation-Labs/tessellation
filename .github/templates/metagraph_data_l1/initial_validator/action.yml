name: Metagraph L1 - Data Initial Validator

inputs:
  METAGRAPH_ID:
    required: true
  CL_PUBLIC_HTTP_PORT:
    required: true
  CL_P2P_HTTP_PORT:
    required: true
  CL_CLI_HTTP_PORT:
    required: true
  CL_GLOBAL_L0_PEER_HTTP_PORT:
    required: true
  CL_L0_PEER_HTTP_PORT:
    required: true

runs:
  using: "composite"
  steps:
    - name: Create directories
      shell: bash
      run: |
        cd .github/config
        mkdir -p containers/
        cd containers
        mkdir data-l1
        mkdir -p jars

    - name: Generate Metagraph L1 - Data JAR
      shell: bash
      run: |
        cd .github/templates/project_template/
        sbt dataL1/assembly

    - name: Move Metagraph L1 - Data JAR
      shell: bash
      run: |
        mv .github/templates/project_template/modules/data_l1/target/scala-2.13/project_template-data_l1-assembly-* .github/config/containers/jars/data-l1.jar

    - name: Running Metagraph L1 - Data Initial Validator
      shell: bash
      run: |
        export CL_KEYSTORE=token-key.p12
        export CL_KEYALIAS=token-key
        export CL_PASSWORD=password
        
        cd .github/config/containers/global-l0/genesis
        export GLOBAL_L0_NODE_ID=$(java -jar ../../jars/cl-wallet.jar show-id)

        cd ../../metagraph-l0/genesis
        export CURRENCY_L0_GENESIS_NODE_ID=$(java -jar ../../jars/cl-wallet.jar show-id)
        export METAGRAPH_IDENTIFIER=$METAGRAPH_ID

        cd ../../data-l1
        mkdir initial-validator
        cd initial-validator

        java -jar ../../jars/cl-keytool.jar generate
        
        export CURRENCY_L1_INITIAL_VALIDATOR_NODE_ID=$(java -jar ../../jars/cl-wallet.jar show-id)

        export CL_PUBLIC_HTTP_PORT=${{ inputs.CL_PUBLIC_HTTP_PORT }}
        export CL_P2P_HTTP_PORT=${{ inputs.CL_P2P_HTTP_PORT }}
        export CL_CLI_HTTP_PORT=${{ inputs.CL_CLI_HTTP_PORT }}
        export CL_APP_ENV=dev
        export CL_COLLATERAL=0
        export CL_GLOBAL_L0_PEER_HTTP_HOST=127.0.0.1
        export CL_GLOBAL_L0_PEER_HTTP_PORT=${{ inputs.CL_GLOBAL_L0_PEER_HTTP_PORT }}
        export CL_GLOBAL_L0_PEER_ID=$GLOBAL_L0_NODE_ID
        export CL_L0_PEER_HTTP_HOST=127.0.0.1
        export CL_L0_PEER_HTTP_PORT=${{ inputs.CL_L0_PEER_HTTP_PORT }}
        export CL_L0_PEER_ID=$CURRENCY_L0_GENESIS_NODE_ID
        export CL_L0_TOKEN_IDENTIFIER=${{ inputs.METAGRAPH_ID }}

        echo "GLOBAL_L0_NODE_ID=$CL_GLOBAL_L0_PEER_ID"
        echo "CURRENCY_L0_GENESIS_NODE_ID=$CL_L0_PEER_ID"
        echo "METAGRAPH_IDENTIFIER=$CL_L0_TOKEN_IDENTIFIER"
        echo "CURRENCY_L1_INITIAL_VALIDATOR_NODE_ID=$CURRENCY_L1_INITIAL_VALIDATOR_NODE_ID"

        nohup java -jar ../../jars/data-l1.jar run-initial-validator --ip 127.0.0.1 > data-l1-initial-validator.log 2>&1 &

        node ../../../../action_scripts/check_if_node_started/index.js -url=http://127.0.0.1:${{ inputs.CL_PUBLIC_HTTP_PORT }}/node/info -cluster_name=Data-L1-Initial-Validator