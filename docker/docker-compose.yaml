services:
  global-l0:
    image: constellationnetwork/tessellation:${TESSELLATION_DOCKER_VERSION:-latest}
    container_name: global-l0${CONTAINER_NAME_SUFFIX:-}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - CL_KEYSTORE=/tessellation/key.p12
    ports:
      - "${CL_DAG_L0_PUBLIC_PORT:-9000}:9000"  # Public HTTP
      - "${CL_DAG_L0_PEER_PORT:-9001}:9001"  # P2P HTTP
    volumes:
      - ${CL_KEYSTORE_MOUNT_PATH:-./key.p12}:/tessellation/key.p12:ro
      # Only required for testing purposes
      - ${CL_GENESIS_FILE:-/dev/null}:/tessellation/genesis.csv:ro
      # If using docker volumes:
      - gl0-data:/tessellation/data
      # If using host volumes:
      # - ${CL_L0_DATA_MOUNT_PATH:-./l0-data}:/tessellation/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/node/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - tessellation-network
    profiles: ["l0"]
    extra_hosts:
      "host.docker.internal": "host-gateway"

  dag-l1:
    image: constellationnetwork/tessellation:${TESSELLATION_DOCKER_VERSION:-latest}
    container_name: dag-l1${CONTAINER_NAME_SUFFIX:-}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - CL_DAG_L1=true
      - CL_L0_PEER_HTTP_HOST=${CL_L0_PEER_HTTP_HOST:-global-l0}
      - CL_KEYSTORE=/tessellation/key.p12
      - CL_DAG_L1_JOIN_ENABLED=${CL_DAG_L1_JOIN_ENABLED:-true}
      - CL_DAG_L1_JOIN_PORT=${CL_DAG_L1_JOIN_PORT:-9001}
    ports:
      - "${CL_DAG_L1_PUBLIC_PORT:-9010}:9000"  # Public HTTP
      - "${CL_DAG_L1_PEER_PORT:-9011}:9001"  # P2P HTTP
      - "${CL_DAG_L1_CLI_PORT:-9012}:9002"  # CLI
    volumes:
      - ${CL_KEYSTORE_MOUNT_PATH:-./key.p12}:/tessellation/key.p12:ro
      # If using docker volumes:  
      - dag-l1-data:/tessellation/data
      # If using host volumes:
      # - ${CL_L1_DATA_MOUNT_PATH:-./l1-data}:/tessellation/data
    # Only if using L0 profile
    # depends_on:
    #   global-l0:
    #     condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/node/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - tessellation-network
    extra_hosts:
      "host.docker.internal": "host-gateway"

# Use volumes for persistence as alternative to mounted file system storage
volumes:
  gl0-data:
    name: gl0-data${CONTAINER_NAME_SUFFIX:-}
  dag-l1-data:
    name: dag-l1-data${CONTAINER_NAME_SUFFIX:-}

networks:
  tessellation-network:
    driver: bridge
